[tool.ruff]
line-length = 88
target-version = "py311"
exclude = ["tests/*"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "RUF", # ruff-specific rules
    "PL",  # pylint
    "TD",  # TODO comments
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.11"
warn_return_any = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_any_generics = true
# exclude = "tests/*"

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
warn_return_any = false
check_untyped_defs = false
disallow_any_generics = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false

[tool.coverage.run]
branch = true
source = ["src/hurdat2_etl"]  # Change this to include the src directory
relative_files = true         # Add this line to help with path resolution

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src/hurdat2_etl --cov-report=term-missing --cov-report=html --cov-report=lcov:lcov.info"
testpaths = ["tests"]

[tool.coverage.report]
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass"
]

[tool.poetry]
name = "reference"
version = "0.1.0"
description = "ETL pipeline for HURDAT2 data"
authors = ["matt@jacksonsix.com"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">3.11, <3.12"
pydantic = "^2.6.1"
tqdm = "^4.66.1"
pysqlite3-binary = "^0.5.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.0"
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
packaging = "^24.2"
ruff = "^0.9.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
